[tox]
envlist = pep8,py34,py27,docs

[testenv]
install_command = pip install -U {opts} {packages}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt

commands =
    /usr/bin/find . -type f -name "*.pyc" -delete
    python setup.py testr --coverage --testr-args='{posargs}'
    coverage combine
    coverage report -m

[testenv:cover]
deps =
    {[testenv]deps}
    diff_cover
commands =
    python setup.py testr --coverage --testr-args='{posargs}'
    coverage combine
    coverage xml
    diff-cover --fail-under 100 coverage.xml

[testenv:releasenotes]
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:py34]
commands =
    /usr/bin/find . -type f -name "*.pyc" -delete
    python -m testtools.run \
        barbican.tests.api.controllers.test_versions \
        barbican.tests.api.middleware.test_context \
        barbican.tests.api.middleware.test_simple \
        barbican.tests.cmd.test_cmd \
        barbican.tests.common.test_hrefs \
        barbican.tests.common.test_quota \
        barbican.tests.common.test_utils \
        barbican.tests.model.repositories.test_repositories \
        barbican.tests.model.repositories.test_repositories_acls \
        barbican.tests.model.repositories.test_repositories_certificate_authorities \
        barbican.tests.model.repositories.test_repositories_consumers \
        barbican.tests.model.repositories.test_repositories_containers \
        barbican.tests.model.repositories.test_repositories_order_retry_tasks \
        barbican.tests.model.repositories.test_repositories_orders \
        barbican.tests.model.repositories.test_repositories_projects \
        barbican.tests.model.repositories.test_repositories_quotas \
        barbican.tests.model.repositories.test_repositories_secrets \
        barbican.tests.model.repositories.test_repositories_transport_keys \
        barbican.tests.model.test_models \
        barbican.tests.plugin.crypto.test_manager \
        barbican.tests.plugin.interface.test_secret_store \
        barbican.tests.plugin.test_simple_certificate_manager \
        barbican.tests.plugin.util.test_mime_types \
        barbican.tests.plugin.util.test_utils \
        barbican.tests.queue.test_client \
        barbican.tests.queue.test_keystone_listener \
        barbican.tests.queue.test_retry_scheduler \
        barbican.tests.queue.test_server \
        barbican.tests.tasks.test_certificate_resources \
        barbican.tests.tasks.test_common \
        barbican.tests.tasks.test_resources

[testenv:pep8]
sitepackages = False
commands =
  flake8 {posargs}
  # Run security linter
  bandit -c bandit.yaml -r barbican -n5 -p barbican_conservative

[testenv:venv]
commands = {posargs}

[testenv:debug]
commands = oslo_debug_helper {posargs}

[testenv:py3pep8]
# This hack is in place to allow us to run py3 based flake8
# without installing barbican.
basepython = python3
install_command = /bin/echo {packages}
commands =
  pip install "hacking>=0.10.0,<0.11"
  flake8 barbican setup.py

[testenv:docs]
commands=
    python setup.py build_sphinx

[testenv:functional]
# This tox env is purely to make local test development easier
# Note: This requires local running instances of Barbican and Keystone
deps = -r{toxinidir}/test-requirements.txt
setenv = OS_TEST_PATH={toxinidir}/functionaltests
commands =
    /usr/bin/find . -type f -name "*.pyc" -delete
    /bin/bash {toxinidir}/functionaltests/pretty_tox.sh '{posargs}'

[flake8]
exclude = .git,.idea,.tox,bin,dist,debian,rpmbuild,tools,*.egg-info,*.eggs,*openstack/common,contrib,
          functionaltests,*alembic_migrations/versions,*docs/target,*.egg

[testenv:bandit]
deps = -r{toxinidir}/test-requirements.txt
commands = bandit -c bandit.yaml -r barbican -n5 -p barbican_conservative
